@charset "UTF-8";
/* Responsive --------------------------------------------------------------------*/
/* 569px */
/* 640px */
/* 768px */
/* 1024px */
/* 1280px */
/* Colors (http://chir.ag/projects/name-that-color) --------------------------*/
/* Fonts ---------------------------------------------------------------------*/
/* Config --------------------------------------------------------------------*/
/* Gutters -------------------------------------------------------------------*/
/* Component -----------------------------------------------------------------*/
.form__forgot-passowrd {
  padding-left: 20px; }

.button__primary {
  background: #8c387a;
  background: -moz-radial-gradient(center, ellipse cover, #8c387a 0%, #872c72 40%, #801b67 100%);
  background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop(0%, #8c387a), color-stop(40%, #872c72), color-stop(100%, #801b67));
  background: -webkit-radial-gradient(center, ellipse cover, #8c387a 0%, #872c72 40%, #801b67 100%);
  background: -o-radial-gradient(center, ellipse cover, #8c387a 0%, #872c72 40%, #801b67 100%);
  background: -ms-radial-gradient(center, ellipse cover, #8c387a 0%, #872c72 40%, #801b67 100%);
  background: radial-gradient(ellipse at center, #8c387a 0%, #872c72 40%, #801b67 100%);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#8c387a', endColorstr='#801b67', GradientType=1 );
  color: white;
  width: 100px; }

.button__primary:hover {
  background: #808080;
  color: white; }

.inner__addon {
  position: relative;
  color: #808080; }

/* style icon */
.inner__addon .glyphicon {
  position: absolute;
  padding: 10px;
  pointer-events: none; }

/* align icon */
.left--addon .glyphicon {
  left: 0px; }

.right--addon .glyphicon {
  right: 0px; }

/* add padding  */
.left--addon input {
  padding-left: 30px; }

.right--addon input {
  padding-right: 30px; }

.modal__default {
  background-color: white;
  min-height: 200px;
  width: 400px;
  left: 0;
  margin: 0 auto;
  position: absolute;
  right: 0;
  top: 30%; }

.modal__header {
  background: #8c387a;
  background: -moz-radial-gradient(center, ellipse cover, #8c387a 0%, #872c72 40%, #801b67 100%);
  background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop(0%, #8c387a), color-stop(40%, #872c72), color-stop(100%, #801b67));
  background: -webkit-radial-gradient(center, ellipse cover, #8c387a 0%, #872c72 40%, #801b67 100%);
  background: -o-radial-gradient(center, ellipse cover, #8c387a 0%, #872c72 40%, #801b67 100%);
  background: -ms-radial-gradient(center, ellipse cover, #8c387a 0%, #872c72 40%, #801b67 100%);
  background: radial-gradient(ellipse at center, #8c387a 0%, #872c72 40%, #801b67 100%);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#8c387a', endColorstr='#801b67', GradientType=1 );
  color: white;
  display: block;
  font-size: 16px;
  height: 50px;
  line-height: 50px;
  padding: 0 20px; }

.modal__content {
  padding: 20px; }

.modal__close {
  padding-right: 20px;
  position: absolute;
  right: 0; }

/* Page ----------------------------------------------------------------------*/
/* Skins ---------------------------------------------------------------------*/
/* Helpers -------------------------------------------------------------------*/
.shadow--2d {
  -webkit-box-shadow: 2px 2px 5px 0px rgba(50, 50, 50, 0.75);
  -moz-box-shadow: 2px 2px 5px 0px rgba(50, 50, 50, 0.75);
  box-shadow: 2px 2px 5px 0px rgba(50, 50, 50, 0.75); }

/*
	GUTTERS - Padronização de preenchimentos ----------------------------------

Gutter é utilizado para distanciamento de componentes. Espaçamentos internos de
componente continuam a ser definidos através da propriedade padding nas
definições do próprio componente.

Ex: O seletor "form__field--spacing-top", é perfeito para uso do gutter,
"--spacing-top" não deveria ser especialização, o gutter resolve este problema.

Seria abusivo o uso de gutter para todo tipo de espaçamento. Enfim, gutter é
para distanciamento de componentes diferentes e não partes de um mesmo componente.
Senão estaríamos apenas trocando a propriedade padding por uma classe injetada
no HTML. O objetivo não é esse.

Gutter como helper evita especializações de componentes que estariam mais
relacionadas ao contexto no qual o componente foi inserido e não a si próprio.
Não se encaixa no caso de usar um scss de page porque este tipo de ajuste acaba
sendo recorrente em diversos outros componentes daí fica claro que é digno que
se tornar um helper.

Resumindo, padding interno não usa gutter, para distância em relação à outros
componentes, use gutter.

MIXINS:
gutter, gutter-vertical, gutter-horizontal

VALORES:
O arquivo _vars.scss especifica as distâncias permitidas para uso conjunto com
mixins de gutter.

FAQ:
#1 Qual critério para determinar o que é gutter e o que é padding do componente?

	R: O gutter, quando o é, não deve afetar visualmente o componente, se afetar
	poder ser que o gutter está	sendo atribuído no elemento incorreto,
	precisando de um container para recebê-lo. Normalmente o componente é
	acomodado dentro de algum componente wrapper ou coluna ou linha.

*/
/*
	gutter()
	- Gera classes do tipo gutter--md-t20
	- Podem ser especificados top, right, bottom, left
	- As propriedades devem obedecer a ordem top, right, bottom, left
	- Parâmetro $breakpoint é "opcional"

	Exemplo #1:
		.gutter--md-b80
		@include gutter((bottom: $gutter-80), 'md');

	Exemplo #2:
		.gutter--md-t30-r20-b80-l20

		$map: (
			top: $gutter-30,
			right: $gutter-20,
			bottom: $gutter-80,
			left: $gutter-120
		);

		@include gutter($map, 'md');
*/
/*
	gutter-vertical()
	- Gera classes do tipo gutter--md-t20-b20
	- Fachada para gutter que predefine (top, bottom) com mesmo valor

	Exemplo #1:
		.gutter--md-t80-b80
		@include gutter-vertical($gutter-80, 'md');

*/
/*
	gutter-horizontal()
	- Gera classes do tipo gutter--md-r20-l20
	- Fachada para gutter que predefine (right, left) com mesmo valor

	Exemplo #1:
		.gutter--md-r80-l80
		@include gutter-horizontal($gutter-80, 'md');
*/
.gutter--t20 {
  padding-top: 20px; }

.gutter--t40 {
  padding-top: 40px; }

.skin--primary {
  background: #8c387a;
  background: -moz-radial-gradient(center, ellipse cover, #8c387a 0%, #872c72 40%, #801b67 100%);
  background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop(0%, #8c387a), color-stop(40%, #872c72), color-stop(100%, #801b67));
  background: -webkit-radial-gradient(center, ellipse cover, #8c387a 0%, #872c72 40%, #801b67 100%);
  background: -o-radial-gradient(center, ellipse cover, #8c387a 0%, #872c72 40%, #801b67 100%);
  background: -ms-radial-gradient(center, ellipse cover, #8c387a 0%, #872c72 40%, #801b67 100%);
  background: radial-gradient(ellipse at center, #8c387a 0%, #872c72 40%, #801b67 100%);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#8c387a', endColorstr='#801b67', GradientType=1 ); }

.no-padding {
  padding: 0 !important; }
  .no-padding--left {
    padding-left: 0 !important; }
  .no-padding--right {
    padding-right: 0 !important; }
  .no-padding--top {
    padding-top: 0 !important; }
  .no-padding--bottom {
    padding-bottom: 0 !important; }

.display--inline-block {
  display: inline-block !important; }

.display--inline {
  display: inline !important; }

.display--block {
  display: block !important; }

.display--none {
  display: none; }

.align--middle {
  vertical-align: middle !important; }

.align--top {
  vertical-align: top; }

.align--bottom {
  vertical-align: bottom; }

.align--center {
  text-align: center !important; }

.align--left {
  text-align: left !important; }

.align--right {
  text-align: right !important; }

html {
  height: 100%; }

body {
  margin: 0;
  padding: 0;
  font-family: sans-serif;
  background: #872573;
  min-height: 100%;
  background: #8c387a;
  background: -moz-radial-gradient(center, ellipse cover, #8c387a 0%, #872c72 40%, #801b67 100%);
  background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop(0%, #8c387a), color-stop(40%, #872c72), color-stop(100%, #801b67));
  background: -webkit-radial-gradient(center, ellipse cover, #8c387a 0%, #872c72 40%, #801b67 100%);
  background: -o-radial-gradient(center, ellipse cover, #8c387a 0%, #872c72 40%, #801b67 100%);
  background: -ms-radial-gradient(center, ellipse cover, #8c387a 0%, #872c72 40%, #801b67 100%);
  background: radial-gradient(ellipse at center, #8c387a 0%, #872c72 40%, #801b67 100%);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#8c387a', endColorstr='#801b67', GradientType=1 );
  color: white; }
